name:                extrapolate
version:             0.2.0
synopsis:            generalize counter-examples of test properties
description:
  Extrapolate is a tool able to provide generalized counter-examples of test
  properties where irrelevant sub-expressions are replaces with variables.
  .
  For the incorrect property @\xs -> nub xs == (xs::[Int])@:
  .
  * @[0,0]@ is a counter-example;
  .
  * @x:x:_@ is a generalized counter-example.

homepage:            https://github.com/rudymatela/extrapolate#readme
license:             BSD3
license-file:        LICENSE
author:              Rudy Matela
maintainer:          Rudy Matela <rudy@matela.com.br>
category:            Testing
build-type:          Simple
cabal-version:       >=1.18

extra-doc-files: README.md
               , TODO.md
tested-with: GHC==8.0, GHC==7.10, GHC==7.8

source-repository head
  type:            git
  location:        https://github.com/rudymatela/speculate

source-repository this
  type:            git
  location:        https://github.com/rudymatela/speculate
  tag:             v0.2.0

library
  exposed-modules: Test.Extrapolate
                 , Test.Extrapolate.Core
                 , Test.Extrapolate.Basic
                 , Test.Extrapolate.Derive
                 , Test.Extrapolate.Exprs
                 , Test.Extrapolate.IO
                 , Test.Extrapolate.TypeBinding
  other-modules:   Test.Extrapolate.Utils
  other-extensions:    TemplateHaskell, CPP
  build-depends: base >= 4 && < 5
               , leancheck >= 0.6.4
               , template-haskell
               , speculate >= 0.2.6
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite test
  type:                exitcode-stdio-1.0
  main-is:             test-extrapolate.hs
  hs-source-dirs:      src, tests
  build-depends:       base >= 4 && < 5, leancheck, speculate, template-haskell
  default-language:    Haskell2010

test-suite derive
  type:                exitcode-stdio-1.0
  main-is:             test-derive.hs
  hs-source-dirs:      src, tests
  build-depends:       base >= 4 && < 5, leancheck, speculate, template-haskell
  default-language:    Haskell2010
